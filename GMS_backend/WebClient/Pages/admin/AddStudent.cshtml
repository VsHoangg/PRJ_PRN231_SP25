@page
@model WebClient.Pages.admin.AddStudentModel

<h2>Thêm sinh viên vào lớp học</h2>

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    html, body {
        width: 100%;
        height: 100%;
        font-family: 'Arial', sans-serif;
        background-color: #f4f7f6;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .container {
        width: 100%;
        height: 100%;
        max-width: 1400px;
        background: white;
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        overflow-y: auto;
    }

    h2 {
        text-align: center;
        color: #333;
        font-size: 28px;
        margin-bottom: 20px;
    }

    h3 {
        color: #444;
        margin-top: 20px;
    }

    .form-group {
        margin-top: 15px;
    }

    label {
        font-weight: bold;
        color: #555;
    }

    select, input, button {
        width: 100%;
        padding: 14px;
        font-size: 16px;
        border-radius: 5px;
        border: 1px solid #ccc;
    }

    select {
        background-color: #fff;
        border: 2px solid #4CAF50;
        transition: all 0.3s;
    }

        select:hover {
            border-color: #388E3C;
        }

    button {
        background-color: #4CAF50;
        color: white;
        border: none;
        font-size: 16px;
        cursor: pointer;
        transition: all 0.3s ease-in-out;
        margin-top: 10px;
    }

        button:hover {
            background-color: #388E3C;
        }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
        background: white;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        border-radius: 10px;
        overflow: hidden;
    }

    th, td {
        padding: 15px;
        text-align: center;
        font-size: 18px;
    }

    th {
        background: #4CAF50;
        color: white;
    }

    td {
        border-bottom: 1px solid #ddd;
    }
    /* Danh sách chọn hiển thị ngang */
    .selected-student-list {
        display: flex;
        flex-wrap: nowrap;
        gap: 10px;
        margin-top: 15px;
        padding: 10px;
        background: #f8f8f8;
        border-radius: 5px;
        max-height: 65px;
        overflow-x: auto;
        overflow-y: hidden;
        white-space: nowrap;
    }

    .selected-student {
        background: #4CAF50;
        color: white;
        padding: 6px 12px;
        border-radius: 5px;
        display: inline-flex; /* Căn chỉnh theo hàng ngang */
        align-items: center; /* Căn giữa nội dung theo chiều dọc */
        font-size: 16px;
        
        white-space: nowrap;
    }

        /* Nút X */
        .selected-student button {
            background: red;
            color: white;
            border: none;
            width: 18px; /* Kích thước vòng tròn */
            height: 18px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%; /* Hình tròn */
            font-size: 12px; /* Kích thước chữ X */
            font-weight: bold;
            margin-left: 10px; /* Cách chữ ra một chút */
            padding: 0;
            line-height: 18px; /* Căn giữa chữ trong nút */
            position: relative;
            margin-bottom: 5px;
            top: -1px; /* Dịch lên một chút để ngang hàng với chữ */
        }









    .error-message p {
        color: red;
        font-size: 14px;
    }


</style>

<div class="container">
    <div class="error-message">
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <p>@error.ErrorMessage</p>
        }
    </div>

    <h3>Danh sách sinh viên hiện tại trong lớp</h3>
    <table>
        <thead>
            <tr>
                <th>Student ID</th>
                <th>Student Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var student in Model.CurrentStudents)
            {
                <tr>
                    <td>@student.StudentId</td>
                    <td>@student.StudentName</td>
                </tr>
            }
        </tbody>
    </table>

    <h3>Chọn sinh viên mới</h3>
    <form method="post">
        <input type="hidden" asp-for="SessionId" />

     
        <select id="studentSelect" class="form-control">
            <option value="">-- Chọn sinh viên --</option>
            @foreach (var student in Model.AllStudents)
            {
                <option value="@student.Id">@student.Username</option>
            }
        </select>

       

        <div class="selected-student-list">
            <strong>Sinh viên đã chọn:</strong>
            @foreach (var student in Model.SelectedStudents)
            {
                <div class="selected-student" data-id="@student.Id">
                    @student.Username
                    <button type="button" class="remove-student" data-id="@student.Id">X</button>
                </div>
            }
        </div>

        @foreach (var studentId in Model.SelectedStudentIds)
        {
            <input type="hidden" name="SelectedStudentIds" value="@studentId" />
        }

        <button type="submit" asp-page-handler="AddStudents">Thêm sinh viên vào lớp</button>
    </form>

    <button type="button" onclick="history.back()">Quay lại</button>
</div>

<script>
    document.getElementById("studentSelect").addEventListener("change", function () {
        var select = this;
        var selectedId = select.value;
        var selectedText = select.options[select.selectedIndex].text;

        if (selectedId && !document.querySelector(`.selected-student[data-id='${selectedId}']`)) {
            var div = document.createElement("div");
            div.classList.add("selected-student");
            div.setAttribute("data-id", selectedId);
            div.innerHTML = `${selectedText} <button type="button" class="remove-student" data-id="${selectedId}">X</button>`;

            document.querySelector(".selected-student-list").appendChild(div);

            var input = document.createElement("input");
            input.type = "hidden";
            input.name = "SelectedStudentIds";
            input.value = selectedId;
            document.querySelector("form").appendChild(input);
        }

        // Reset dropdown về mặc định sau khi chọn
        select.selectedIndex = 0;
    });

    document.addEventListener("click", function (e) {
        if (e.target.classList.contains("remove-student")) {
            var studentId = e.target.getAttribute("data-id");

            e.target.parentElement.remove();

            document.querySelector(`input[name='SelectedStudentIds'][value='${studentId}']`)?.remove();
        }
    });

</script>
