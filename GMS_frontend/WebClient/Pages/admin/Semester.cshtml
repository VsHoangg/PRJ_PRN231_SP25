@page
@model WebClient.Pages.admin.SemesterModel
@inject IHttpClientFactory HttpClientFactory

@{
    ViewData["Title"] = "Quản lý Học kỳ";
}
<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f8f9fa;
        text-align: center;
        margin: 50px;
    }

    h2 {
        color: #007bff;
    }

    .status-container {
        margin: 20px auto;
        padding: 20px;
        background: white;
        border-radius: 8px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        width: 50%;
    }

    #semesterStatus {
        font-size: 20px;
        font-weight: bold;
        padding: 10px;
        display: inline-block;
        border-radius: 5px;
    }

    .ongoing {
        color: white;
        background-color: #28a745;
    }

    .not-ongoing {
        color: white;
        background-color: #dc3545;
    }

    .btn-primary {
        font-size: 16px;
        padding: 10px 20px;
        border-radius: 5px;
        border: none;
        cursor: pointer;
        background: #007bff;
        color: white;
        transition: background 0.3s ease-in-out;
    }

        .btn-primary:hover {
            background: #0056b3;
        }
</style>


<h2>Quản lý Trạng thái Học kỳ</h2>

<div>
    <p>Trạng thái hiện tại: <strong id="semesterStatus">Đang tải...</strong></p>
    <button id="toggleSemester" class="btn btn-primary">Thay đổi Trạng thái</button>
</div>

<script>
    document.addEventListener("DOMContentLoaded", async function () {
        const statusElement = document.getElementById("semesterStatus");
        const toggleButton = document.getElementById("toggleSemester");

        async function fetchSemesterStatus() {
            try {
                let response = await fetch("http://localhost:5100/api/Semester/IsSemesterOnGoing");
                if (!response.ok) throw new Error("Lỗi tải trạng thái");
                let isOnGoing = await response.json();
                statusElement.textContent = isOnGoing ? "Đang diễn ra" : "Không diễn ra";
            } catch (error) {
                statusElement.textContent = "Lỗi tải trạng thái!";
            }
        }

        toggleButton.addEventListener("click", async function () {
            try {
                let response = await fetch("http://localhost:5100/api/Semester/ChangeSemesterStatus", {
                    method: "PUT"
                });

                if (!response.ok) throw new Error("Lỗi khi cập nhật trạng thái!");

                let message = await response.text();
                alert(message);
                fetchSemesterStatus();
            } catch (error) {
                alert(error.message);
            }
        });

        fetchSemesterStatus();
    });
</script>
